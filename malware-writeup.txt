This "malware" is harmless. It leaves processes running, but should self-clean on disk.
Only /tmp/ is written to. The running processes only open useless network connections, but
they don't die on their own.

The binary (getmoney) simply sleeps and prints stuff. However, it does some
shenanigans prior to the messages:

 - The binary has a .zip appended to it.
 
 1. The executable creates a temp file in /tmp
 2. The executable gets a reference to itself via procfs (/proc/<pid>/exe)
 3. The executable invokes unzip via system, extracting a .so library into the temp dir
 4. The executable then double forks to get a detached daemon process.
 5. The parent process continues on its way and prints the useless garbage.
 6. The daemon process sets LD_PRELOAD to the extracted library.
 7. The daemon tries to exec a few innocent-looking processes (cron, sshd, ls...)
 8. The new process (once one is successful) runs, preloads the library, and gets hooked early.
 9. The hook checks LD_PRELOAD and cleans up (deletes the .so and temp dir, then cleans the environment)
10. Execution of the hook continues in the context of the legit-looking hooked daemon 
      (has a clean environment, process is the correct executable file...)
11. The "malware" connects on a 30 second interval to a CC server and tries to throw some fake
      data at it. Execution never returns to the executed process itself.

To finish the CTF, the CC server has a FTP server with anonymous R/O access enabled, and the flag.txt in the
FTP root.
